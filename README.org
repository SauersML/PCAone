#+TITLE: PCAone - Principal Component Analysis All in One

#+OPTIONS: ^:nil

*Current Version: v0.1.3*

PCAone is a fast and memory efficient PCA tool implemented in C++ aiming at providing comprehensive features and algorithms for different scenarios.

* Features

See [[file:CHANGELOG.org][change log]] here.

- Has both Arnoldi and Halko methods with *out-of-core* implementation.
- Implement our own Halko algorithm with super power iteration for tera-scale dataset.
- Quite fast with multi-threading support using high performance library [[https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/onemkl.html#gs.8jsfgz][MKL]] or [[https://www.openblas.net/][OpenBLAS]] as backend.
- Supports the [[https://www.cog-genomics.org/plink/1.9/formats#bed][PLINK]], [[https://www.well.ox.ac.uk/~gav/bgen_format][BGEN]], [[http://www.popgen.dk/angsd/index.php/Input#Beagle_format][Beagle]] genetic data formats.
- Supports [[https://github.com/Rosemeis/emu][EMU]] algorithm for scenario with large proportion of missingness.
- Supports [[https://github.com/Rosemeis/pcangsd][PCAngsd]] algorithm for low coverage sequencing scenario with genotype likelihood as input.
- Supports zstd compressed CSV format for scRNAs data [In progress]

| Input format               | bfile | bgen | beagle |
| Arnoldi method             | +     | +    | +      |
| One-Pass Halko             | +     | +    | +      |
| Super fast Halko           | +     | -    | -      |
| EMU algorithm              | +     | +    | -      |
| PCAngsd algorithm          | -     | +    | +      |
| Out-of-core implementation | +     | +    | -      |


* Installation

** Download pre-compiled binary

There are pre-compiled program provided for both Mac and Linux platform. For Mac platform, the binary program is without MKL threading. For Linux platform, it is recommended to use PCAone with MKL libiomp5 threading which will speed up the program significantly, but please make sure the runtime library =libiomp5= is in your environment =LD_LIBRARY_PATH=. Check the releases page to download it.

** Build from source

If you don't want to use MKL of OpenBlas as backends, you can just copy and paste the following code in the terminal without modifying anything. 
#+begin_src shell
git clone https://github.com/Zilong-Li/PCAone.git
# modify variables in Makefile to use MKL or OpenBlas as backend
cd PCAone
make
#+end_src
Since the default compilation is without external MKL or OpenBLAS support, you need to set the =MKLROOT= or =OPENBLAS_ROOT= in *Makefile* to your own path to use one of them as backend. If it complains that there is no =lapack= lib, please install it and set the =LAPACK_ROOT= to the correct path as well. 

*IMPORTANT:* Only =GNU GCC= compiler is supported because MKL threading doesn't support =clang= at the moment. For mac users, you need to make sure the default compiler is =GNU g++= instead of =clang= by doing the following steps before running =make= command.
#+begin_src shell
brew install gcc
export CC=$(find $(brew --prefix)/bin/ -name "gcc-[0-9]*" | tail -1)
export CXX=$(find $(brew --prefix)/bin/ -name "g++-[0-9]*" | tail -1)
#+end_src

* Usage

#+begin_src plain
Usage:
  ./PCAone [OPTION...]

      --help     print list of main options.
      --helpall  print list of all options.

 Main options:
      --beagle FILE    beagle file.
      --bfile PREFIX   prefix of PLINK .bed/.bim/.fam files.
      --bgen FILE      BGEN file.
  -e, --emu            use EMU algorithm for data with large proportion of
                       missingness.
  -f, --fast           force to use fast super power iterations for Halko.
  -h, --halko          use single pass Halko method instead of default
                       Arnoldi method.
  -k, --eigs INT       top k components to be calculated.[10]
  -m, --memory DOUBLE  specify the RAM usage in GB unit instead of exploiting
                       the RAM of the server.
  -n, --threads INT    number of threads.[1]
  -o, --out PREFIX     prefix of output files.
  -p, --pcangsd        use PCAngsd algorithm for data with genotype
                       probability.
  -v, --verbose        verbose message output.
#+end_src

*Warning*: On most OS it is recommended to limit the number of threads to the number of physical cores. 

* Citation

TBD

* Acknowledgements

PCAone use [[https://eigen.tuxfamily.org/index.php?title=Main_Page][Eigen]] for linear algebra operation. The Arnoldi method is based on [[https://github.com/yixuan/spectra][yixuan/spectra]]. The bgen lib is ported from [[https://github.com/jeremymcrae/bgen][jeremymcrae/bgen]]. The EMU and PCAngsd algorithms are modified from [[https://github.com/Rosemeis][@Jonas]] packages.
